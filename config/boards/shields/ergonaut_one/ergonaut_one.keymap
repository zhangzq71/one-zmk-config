#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick-tap-ms = <200>;
};

&mt {
    quick-tap-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_LSN1 {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp LA(LS(N1))>;
        };           
        combo_LSN2 {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LA(LS(N2))>;
        };           
        combo_LSN3 {
            timeout-ms = <50>;
            key-positions = <24 25>;
            bindings = <&kp LA(LS(N3))>;
        };           

        combo_lpar {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&kp LPAR>;
        };           
        combo_rpar {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp RPAR>;
        };           
        combo_lbkt {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp LBKT>;
        };
        combo_rbkt {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp RBKT>;
        };
        combo_lbrc {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp LBRC>;
        };
        combo_rbrc {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp RBRC>;
        };
        combo_under {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp UNDER>;
        };
        combo_hash {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp HASH>;
        };
        combo_plus {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp KP_PLUS>;
        };
        combo_minus {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp KP_MINUS>;
        };
        combo_multipy {
            timeout-ms = <50>;
            key-positions = <34 35>;
            bindings = <&kp KP_MULTIPLY>;
        };
        combo_amps {
            timeout-ms = <50>;
            key-positions = <9 10>;
            bindings = <&kp AMPS>;
        };
        combo_pipe {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp PIPE>;
        };
        combo_percent {
            timeout-ms = <50>;
            key-positions = <33 34>;
            bindings = <&kp PRCNT>;
        };
        combo_qmark {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp QMARK>;
        };
        combo_at {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp AT>;
        };
        combo_caret {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&kp CARET>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp GRAVE        &kp Q   &kp W      &kp E         &kp R         &kp T         &kp Y         &kp U            &kp I         &kp O      &kp P      &kp EQUAL       
                &kp ESC          &kp A   &kp S      &kp D         &kp F         &kp G         &kp H         &kp J            &kp K         &kp L      &kp SEMI   &kp SQT
                &mt LGUI MINUS   &kp Z &mt LALT X &mt LCTRL C   &mt LSHFT V    &kp B         &kp N      &mt RSHFT M    &mt RCTRL COMMA  &mt RALT DOT &kp FSLH   &kp BSLH
                                                  &mt LSHFT TAB   &lt RSE ESC  &lt LWR SPACE &lt LWR RET   &lt RSE BSPC   &mt RSHFT DEL
            >;
        };
        lower_layer {
            bindings = <
                &kp EXCL         &kp AT     &kp HASH     &kp DLLR       &kp KP_PLUS           &kp LBRC    &kp RBRC     &kp N7       &kp N8      &kp N9    &kp F1    &kp F9          
                &mt LCTRL PLUS   &kp LT    &kp CARET     &kp AMPS       &kp KP_MINUS          &kp LBKT    &kp RBKT     &kp N4       &kp N5      &kp N6    &kp F5    &kp F10 
                &mt LGUI EQUAL   &kp GT   &mt LALT TILDE &mt LCTRL PIPE &mt LSHFT KP_MULTIPLY &kp LPAR  &mt RSHFT RPAR &mt RCTRL N1 &mt RALT N2 &kp N3    &kp F7    &kp F11
                                                     &trans        &trans          &trans      &trans      &kp N0     &kp F12
            >;
        };

        raise_layer {
            bindings = <
                &mt LGUI KP_NUM   &kp KP_SLASH      &kp KP_N7   &kp KP_N8       &kp KP_N9       &kp KP_MINUS   &kp C_VOL_UP   &kp HOME      &kp PSCRN      &kp PG_UP   &kp SLCK          &kp CLCK   
                &mt LCTRL EQUAL   &kp KP_MULTIPLY   &kp KP_N4   &kp KP_N5       &kp KP_N6       &kp KP_PLUS    &kp C_MUTE     &kp LEFT      &kp UP         &kp RIGHT   &kp INS           &mt RCTRL  K_APP
                &kp LALT          &kp KP_N0      &mt LALT KP_N1 &mt LCTRL KP_N2 &mt LSHFT KP_N3 &kp KP_DOT     &kp C_VOL_DN   &mt RSHFT END &mt RCTRL DOWN &mt RALT PG_DN   &kp PAUSE_BREAK   &kp RALT
                                                                &trans      &trans      &trans         &trans         &trans     &kp QMARK
            >;
        };
        adjust_layer {
            bindings = <
                &bootloader   &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &bootloader
                &bt BT_CLR    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_SEL 4   &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0   &bt BT_CLR
                &sys_reset    &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &sys_reset
                                                            &trans         &none          &trans         &none          &trans         &trans
            >;
        };
    };
};
